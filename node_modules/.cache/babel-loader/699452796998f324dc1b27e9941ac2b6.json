{"ast":null,"code":"import characters_json from '../data/characters.json';\nimport { ADD_CHARACTER } from '../actions';\nimport { combineReducers } from 'redux';\n\nfunction characters(state = characters_json, action) {\n  switch (action.type) {\n    case ADD_CHARACTER:\n      let characters = state.filter(item => item.id !== action.id);\n      return characters;\n\n    default:\n      return state;\n  }\n}\n\nfunction heroes(state = [], action) {\n  switch (action.type) {\n    case ADD_CHARACTER:\n      let heroes = [...state, createCharacter(action.id)];\n      return heroes;\n\n    default:\n      return state;\n  }\n}\n\nfunction createCharacter(id) {\n  let character = characters_json.find(c => c.id === id);\n  return character;\n}\n\nconst rootReducer = combineReducers({\n  characters,\n  heroes\n});\nexport default rootReducer;","map":{"version":3,"sources":["/Users/653750/Documents/A_React/supersquad/src/reducers/index.js"],"names":["characters_json","ADD_CHARACTER","combineReducers","characters","state","action","type","filter","item","id","heroes","createCharacter","character","find","c","rootReducer"],"mappings":"AAAA,OAAOA,eAAP,MAA4B,yBAA5B;AACA,SAAQC,aAAR,QAA4B,YAA5B;AACA,SAAQC,eAAR,QAA8B,OAA9B;;AAEA,SAASC,UAAT,CAAoBC,KAAK,GAAEJ,eAA3B,EAA4CK,MAA5C,EAAmD;AAC/C,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKL,aAAL;AACA,UAAIE,UAAU,GAAGC,KAAK,CAACG,MAAN,CAAaC,IAAI,IAAIA,IAAI,CAACC,EAAL,KAAYJ,MAAM,CAACI,EAAxC,CAAjB;AACA,aAAON,UAAP;;AACD;AACA,aAAOC,KAAP;AALH;AAOH;;AAED,SAASM,MAAT,CAAgBN,KAAK,GAAE,EAAvB,EAA2BC,MAA3B,EAAkC;AAC9B,UAAOA,MAAM,CAACC,IAAd;AACC,SAAKL,aAAL;AACG,UAAIS,MAAM,GAAG,CAAC,GAAGN,KAAJ,EAAWO,eAAe,CAACN,MAAM,CAACI,EAAR,CAA1B,CAAb;AACA,aAAOC,MAAP;;AACH;AACA,aAAON,KAAP;AALD;AAOH;;AAED,SAASO,eAAT,CAAyBF,EAAzB,EAA4B;AAC5B,MAAIG,SAAS,GAAGZ,eAAe,CAACa,IAAhB,CAAqBC,CAAC,IAAIA,CAAC,CAACL,EAAF,KAAOA,EAAjC,CAAhB;AACA,SAAOG,SAAP;AACC;;AAED,MAAMG,WAAW,GAAGb,eAAe,CAAC;AAChCC,EAAAA,UADgC;AAEhCO,EAAAA;AAFgC,CAAD,CAAnC;AAIA,eAAeK,WAAf","sourcesContent":["import characters_json from '../data/characters.json';\nimport {ADD_CHARACTER} from '../actions';\nimport {combineReducers} from 'redux';\n\nfunction characters(state= characters_json, action){\n    switch(action.type){\n        case ADD_CHARACTER : \n        let characters = state.filter(item => item.id !== action.id);\n        return characters;\n       default :\n       return state;\n    }\n}\n\nfunction heroes(state= [], action){\n    switch(action.type){\n     case ADD_CHARACTER:\n        let heroes = [...state, createCharacter(action.id)];\n        return heroes;\n     default : \n     return state;\n    }\n}\n\nfunction createCharacter(id){\nlet character = characters_json.find(c => c.id===id);\nreturn character;\n}\n\nconst rootReducer = combineReducers({\n    characters,\n    heroes\n})\nexport default rootReducer;"]},"metadata":{},"sourceType":"module"}